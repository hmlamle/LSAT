---
title: "Comparing different scales on predictability of structral components in LAIs to LSAT metrics"
author: "Hannah-Marie Lamle"
date: "March 13, 2025"
format: pdf
---

## Background  
It's hypothesized that the limiting factor for LSAT growth and domination on the coral reef benthos is the structural complexity of the substrate, measured by rugosity and slope. Alain's 2024 paper did find an inverse relationship with reef habitat and LSAT abundance, showing that more structurally complex habitats had less LSAT coverage than those with less structure had more coverage. However, understanding specific metrics of the LSAT patches (turf height, sediment depth) were not explored as a function of structural complexity. We are exploring the possibility of quantifying this relationship using geostatistics extracted from large area images of the reef sites, using photogrammetry. 

To do this, I went out in the field with Alain to capture one of the transects where LSAT sediment depth and turf length are measured, in 25 plots at each meter along a 25 meter transect, resulting in 25 plots. Each plot had a microquadrat of 25cm x 25cm where measurements were taken. The large area image of the transect was created in Metashape. In order to extract rugosity values, the point cloud was inserted into VISCORE, and a box in the dimensions of the microquadrat (25x25cm) was drawn to extract depth points along 20 transect lines in the box for further calculation of rugosity. This was repeated for a box of 50cm x 50cm and 100cm x 100cm. Next, the DEM was extracted from Metashape and imported to GIS, where the slope of each box (25x25cm, 50x50cm, 100x100cm) was calculated at each plot site. 

After all information was extracted, processesing was ran in R using linear models to assess the relationship between these two structural values and the LSAT metrics. 

![Screen grab of GIS showing LAI with areas for structural elements extracted. Yellow dot is location of nail marking each point. Green box = 25cm, Blue box = 50cm, Pink box = 100cm. Note that in this image, there is 26 plots. The last plot in the series was removed.](lai.png)


# Rugosity predicting Turf Length:

```{r echo=FALSE, warning=FALSE, message=FALSE, results='hide'}
library(tidyverse)
library(ggplot2)
library(readxl)
library(dplyr)
```


```{r echo=FALSE, warning=FALSE, error=FALSE}
source("Rugosity_code.R")
source("data_visualization.R")

ggplot(rawdata25, aes(x = avg_rugo25, y = `Turf length (mm)`))+   
  geom_point()+
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity")+
  ggtitle("25cm quadrat")
model <- lm(`Turf length (mm)` ~ avg_rugo25, data = rawdata25)
summary(model)


ggplot(rawdata25, aes(rugo25_A, y = `Turf length (mm)`))+     
  geom_point()+                                                                 
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity on 0-1 scale")+
  ggtitle("25cm quadrat")
model <- lm(`Turf length (mm)` ~ rugo25_A, data = rawdata25)
summary(model)

ggplot(rawdata50, aes(x = avg_rugo50, y = `Turf length (mm)`))+   # Modelling turf length (y) as function of rugosity (x)
  geom_point()+
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity")+
  ggtitle("50cm Quadrat")
model <- lm(`Turf length (mm)` ~ avg_rugo50, data = rawdata50)
summary(model)

ggplot(rawdata50, aes(rugo50_A, y = `Turf length (mm)`))+      
  geom_point()+                                                                 
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity on 0-1 scale")+
  ggtitle("50cm Quadrat")
model <- lm(`Turf length (mm)` ~ rugo50_A, data = rawdata50)
summary(model)

ggplot(rawdata100, aes(x = avg_rugo100, y = `Turf length (mm)`))+   # Modelling turf length (y) as function of rugosity (x)
  geom_point()+
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity")+
  ggtitle("100cm Quadrat")
model <- lm(`Turf length (mm)` ~ avg_rugo100, data = rawdata100)
summary(model)

ggplot(rawdata100, aes(rugo100_A, y = `Turf length (mm)`))+     # modelling sediment depth (y) as function
  geom_point()+                                                                 # of rugosity (x)
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity on 0-1 scale")+
  ggtitle("100cm Quadrat")
model <- lm(`Turf length (mm)` ~ rugo100_A, data = rawdata100)
summary(model)
```

# Rugosity predicting Sediment Depth: 

```{r echo=FALSE, warning=FALSE, error=FALSE}
ggplot(rawdata25, aes(x = avg_rugo25,  y = `Sediment depth (mm)`))+     
  geom_point()+                                                               
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity")+
  ggtitle("25cm Quadrat")
model <- lm(`Sediment depth (mm)` ~ avg_rugo25, data = rawdata25)
summary(model)

ggplot(rawdata25, aes(rugo25_A, y = `Sediment depth (mm)`))+    
  geom_point()+                                                                 
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity on 0-1 scale")+
  ggtitle("25cm Quadrat")
model <- lm(`Sediment depth (mm)` ~ rugo25_A, data = rawdata25)
summary(model)

ggplot(rawdata50, aes(x = avg_rugo50,  y = `Sediment depth (mm)`))+     
  geom_point()+                                                                
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity")+
  ggtitle("50cm Quadrat")
model <- lm(`Sediment depth (mm)` ~ avg_rugo50, data = rawdata50)
summary(model)

ggplot(rawdata50, aes(rugo50_A, y = `Sediment depth (mm)`))+     
  geom_point()+                                                                
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity on 0-1 scale")+
  ggtitle("50cm Quadrat")
model <- lm(`Sediment depth (mm)` ~ rugo50_A, data = rawdata50)
summary(model)


ggplot(rawdata100, aes(x = avg_rugo100,  y = `Sediment depth (mm)`))+   
  geom_point()+                                                                 
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity")+
  ggtitle("100cm Quadrat")
model <- lm(`Sediment depth (mm)` ~ avg_rugo100, data = rawdata100)
summary(model)

ggplot(rawdata100, aes(rugo100_A, y = `Sediment depth (mm)`))+   
  geom_point()+                                                                
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Rugosity on 0-1 scale")
model <- lm(`Sediment depth (mm)` ~ rugo100_A, data = rawdata100)
summary(model)
```


# Slope predicting Turf Length: 

```{r echo=FALSE, warning=FALSE, error=FALSE}
ggplot(rawdata25, aes(MEAN, y = `Turf length (mm)`))+          
  geom_point()+                                                                 
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Average Slope (degrees)")+
  ggtitle("25cm Quadrat")
model <- lm(`Turf length (mm)` ~ MEAN, data = rawdata25)
summary(model)

ggplot(rawdata50, aes(MEAN, y = `Turf length (mm)`))+      
  geom_point()+                                                                
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Average Slope (degrees)")+
  ggtitle("50cm Quadrat")
model <- lm(`Turf length (mm)` ~ MEAN, data = rawdata50)
summary(model)

ggplot(rawdata100, aes(MEAN, y = `Turf length (mm)`))+       
  geom_point()+                                                                 
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Average Slope (degrees)")+
  ggtitle("100cm Quadrat")
model <- lm(`Turf length (mm)` ~ MEAN, data = rawdata100)
summary(model)

```


# Slope predicting Sediment Depth: 

```{r echo=FALSE, warning=FALSE, error=FALSE}
ggplot(rawdata25, aes(MEAN, y = `Sediment depth (mm)`))+        
  geom_point()+                                                                
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Average Slope (degrees)")+
  ggtitle("25cm Quadrat")
model <- lm(`Sediment depth (mm)` ~ MEAN, data = rawdata25)
summary(model)


ggplot(rawdata50, aes(MEAN, y = `Sediment depth (mm)`))+     
  geom_point()+                                                                 
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Average Slope (degrees)")+
  ggtitle("50cm Quadrat")
model <- lm(`Sediment depth (mm)` ~ MEAN, data = rawdata50)
summary(model)

ggplot(rawdata100, aes(MEAN, y = `Sediment depth (mm)`))+       
  geom_point()+                                                                 
  geom_smooth(method = "lm", formula = y ~ x)+
  xlab("Average Slope (degrees)")
model <- lm(`Sediment depth (mm)` ~ MEAN, data = rawdata100)
summary(model)
```

