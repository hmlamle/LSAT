summary(model)
ggplot(Comparison_metrics_South_Canyon, aes(avg_rugosity, Turf_length))+         # Modelling
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(Turf_length ~ avg_rugosity, data = Comparison_metrics_South_Canyon)
summary(model)
rugo_100cm <- read_excel("100cm_quadrat_metrics.xlsx")
ggplot(rugo_100cm, aes(Avg_Slope, Turf_length))+
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)
View(rugo_100cm)
ggplot(rugo_100cm, aes(Avg_Slope, Turf_length))+
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(Turf_length ~ Avg_Slope, data = rugosity_metrics_100cm)
model <- lm(Turf_length ~ Avg_Slope, data = rugo_100cm)
summary(model)
ggplot(Comparison_metrics_South_Canyon, aes(avg_rugosity, Turf_length))+         # Modelling turf length (y) as function of
geom_point()+                                                                  # rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(Turf_length ~ avg_rugosity, data = Comparison_metrics_South_Canyon)
summary(model)
ggplot(Comparison_metrics_South_Canyon, aes(avg_rugosity, Sediment_depth))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(Sediment_depth ~ avg_rugosity, data = Comparison_metrics_South_Canyon)
summary(model)
ggplot(Comparison_metrics_South_Canyon, aes(avg_slope, Turf_length))+           # modelling turf length (y) as function
geom_point()+                                                                 # of slope
geom_smooth(method = "lm", formula = y ~ x)
ggplot(Comparison_metrics_South_Canyon, aes(avg_slope, Turf_length))+           # modelling turf length (y) as function
geom_point()+                                                                 # of slope
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(Turf_length ~ avg_slope, data = Comparison_metrics_South_Canyon)
summary(model)
ggplot(Comparison_metrics_South_Canyon, aes(avg_slope, Sediment_depth))+        # modelling sediment depth (y) as function
geom_point()+                                                                 # of slope (x)
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(Sediment_depth ~ avg_slope, data = Comparison_metrics_South_Canyon)
summary(model)
library(tidyverse)
nail <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_26_rugo.csv")
rugosity <- nail %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
View(rugosity)
rugosity <- pre %>%
group_by(SitePlot,Transects) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = 1-(standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() %>%
group_by(SitePlot) |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
nail1 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_1_rugo.csv")
nail1 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_1_rugo.csv")
nail2 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_2_rugo_unsure.csv")
nail3 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_3_rugo.csv")
nail4 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_4_rugo_unsure.csv")
nail5 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_5_rugo.csv")
nail6 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_6_rugo.csv")
nail7 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_7_rugo.csv")
nail8 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_8_rugo.csv")
nail9 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_9_rugo.csv")
nail10 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_10_rugo_unsure.csv")
nail11 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_11_rugo.csv")
nail12 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_12_rugo.csv")
nail13 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_13_rugo.csv")
nail14 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_14_rugo.csv")
nail15 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_15_rugo.csv")
nail16 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_16_rugo.csv")
nail17 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_17_rugo.csv")
nail18 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_18_rugo.csv")
nail19 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_19_rugo.csv")
nail20 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_20_rugo.csv")
nail21 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_21_rugo.csv")
nail22 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_22_rugo.csv")
nail23 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_23_rugo.csv")
nail24 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_24_rugo.csv")
nail25 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_25_rugo.csv")
nail26 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_26_rugo.csv")
library(tidyverse)
nail1 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_1_rugo.csv")
nail2 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_2_rugo_unsure.csv")
nail3 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_3_rugo.csv")
nail4 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_4_rugo_unsure.csv")
nail5 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_5_rugo.csv")
nail6 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_6_rugo.csv")
nail7 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_7_rugo.csv")
nail8 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_8_rugo.csv")
nail9 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_9_rugo.csv")
nail10 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_10_rugo_unsure.csv")
nail11 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_11_rugo.csv")
nail12 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_12_rugo.csv")
nail13 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_13_rugo.csv")
nail14 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_14_rugo.csv")
nail15 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_15_rugo.csv")
nail16 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_16_rugo.csv")
nail17 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_17_rugo.csv")
nail18 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_18_rugo.csv")
nail19 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_19_rugo.csv")
nail20 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_20_rugo.csv")
nail21 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_21_rugo.csv")
nail22 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_22_rugo.csv")
nail23 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_23_rugo.csv")
nail24 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_24_rugo.csv")
nail25 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_25_rugo.csv")
nail26 <- read.csv("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity/nail_26_rugo.csv")
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
write.csv(rugosity,"rugosity.csv")
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail1 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
View(rugosity)
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail1 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail2 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail3 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail4 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail5 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail6 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail7 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail8 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
# replace the name for each of these and rerun, I'm not having 26 replacate functions lol
rugosity <- nail9 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo1 <- nail1 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo2 <- nail2 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo3 <- nail3 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo4 <- nail4 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo5 <- nail5 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo6 <- nail6 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo7 <- nail7 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo8 <- nail8 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo9 <- nail9 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
all_nails <- list(nail1, nail2, nail3, nail4, nail5, nail6, nail7, nail8, nail9, nail10, nail11, nail12, nail13, nail14, nail15, nail16, nail17, nail18, nail19, nail20, nail21, nail22, nail23, nail24, nail25, nail26)
# Initialize an empty list to store the results
rugosity_list <- list()
# Loop through each nail dataset and apply the rugosity calculation
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(nails_list)) {
# Perform the calculations on each nail dataset
rugosity_list[[i]] <- nails_list[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
}
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(all_nails)) {
# Perform the calculations on each nail dataset
rugosity_list[[i]] <- all_nails[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
}
View(rugosity_list)
combined_rugosity <- bind_rows(rugosity_list, .id = "nail")
View(combined_rugosity)
View(rugosity_list)
# Initialize an empty list to store the results
Alain_rugosity <- list()
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(all_nails)) {
# Perform the calculations on each nail dataset
Alain_rugosity[[i]] <- all_nails[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
}
Alain_combined_rugosity <- bind_rows(rugosity_list, .id = "nail")
View(Alain_combined_rugosity)
Alain_combined_rugosity <- bind_rows(Alain_rugosity, .id = "nail")
Alain_combined_rugosity <- bind_rows(Alain_rugosity, .id = "nail")
system("git status")
