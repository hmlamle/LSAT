# rename the columns
for (i in 1:n_files) {
colnames(data_25cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# 50cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "50cm_", i, ".csv")
data_50cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_50cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# and last, 100cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "100cm-", i, ".csv")
data_100cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_100cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# Initialize an empty list to store the results
rugosity_list <- list()
rugo25 <- list()
rugo50 <- list()
rugo100 <- list()
# a For Loop to apply rugo calculation for each nail for 25cm:
for (i in 1:length(data_25cm)) {
# Perform the calculations on each nail dataset
rugo25[[i]] <- data_25cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugo25 = mean(rugosity),
rugo25_variance = var(rugosity),
avg_point_range25 = mean(point_range)
)
}
FINAL_25_rugo <- bind_rows(rugo25, .id = "nail")
write.csv(FINAL_25_rugo, file="25_rugo.csv")
# a For Loop to apply rugo calculation for each nail:
for (i in 1:length(data_50cm)) {
# Perform the calculations on each nail dataset
rugo50[[i]] <- data_50cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugo50 = mean(rugosity),
rugo50_variance = var(rugosity),
avg_point_range50 = mean(point_range)
)
}
FINAL_50_rugo <- bind_rows(rugo50, .id = "nail")
write.csv(FINAL_50_rugo, file="50_rugo.csv")
# a For Loop to apply rugo calculation for each nail:
for (i in 1:length(data_100cm)) {
# Perform the calculations on each nail dataset
rugo100[[i]] <- data_100cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugo100 = mean(rugosity),
rugo100_variance = var(rugosity),
avg_point_range100 = mean(point_range)
)
}
FINAL_100_rugo <- bind_rows(rugo100, .id = "nail")
write.csv(FINAL_100_rugo, file="100_rugo.csv")
# Initialize an empty list to store the results
Alain_rugo25 <- list()
Alain_rugo50 <- list()
Alain_rugo100 <- list()
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_25cm)) {
# Perform the calculations on each nail dataset
Alain_rugo25[[i]] <- data_25cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
rugo25_A = mean(rugosity),
rugo25_var_A = var(rugosity),
avg_point_range_A25 = mean(point_range)
)
}
FINAL_Alain25 <- bind_rows(Alain_rugo25, .id = "nail")
write.csv(FINAL_Alain25, file="25_rugo_Alain.csv")
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_50cm)) {
# Perform the calculations on each nail dataset
Alain_rugo50[[i]] <- data_50cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
rugo50_A = mean(rugosity),
rugo50_var_A = var(rugosity),
avg_point_range_A50 = mean(point_range)
)
}
FINAL_Alain50 <- bind_rows(Alain_rugo50, .id = "nail")
write.csv(FINAL_Alain50, file="50_rugo_Alain.csv")
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_100cm)) {
# Perform the calculations on each nail dataset
Alain_rugo100[[i]] <- data_100cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
rugo100_A = mean(rugosity),
rugo100_var_A = var(rugosity),
avg_point_range_A100 = mean(point_range)
)
}
FINAL_Alain100 <- bind_rows(Alain_rugo100, .id = "nail")
write.csv(FINAL_Alain100, file="100_rugo_Alain.csv")
library(tidyverse)
library(ggplot2)
library(readxl)
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx") %>%
rename(LSAT_bio, nail = Plot)
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx") %>%
rename(LSAT_bio, nail = Plot)
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx") %>%
rename( nail = Plot)
View(LSAT_bio)
slope25 <- read_xlsx("avg_slope_25cm.xlsx")
rawdata25 <- list(LSAT_bio, rugo25, Alain_rugo25, slope25)
rawdata25 %>% reduce(full_join, by='nail', copy = TRUE)
View(LSAT_bio)
rawdata25 <- list(LSAT_bio, FINAL_25_rugo, FINAL_Alain25, slope25)
rawdata25 %>% reduce(full_join, by='nail', copy = TRUE)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
print(alain_rugo25[1])
# and make sure the column type is the same before joining:
LSAT_bio$nail <- as.character(LSAT_bio$nail)
FINAL_25_rugo$nail <- as.character(FINAL_25_rugo$nail)
FINAL_Alain25$nail <- as.character(FINAL_Alain25$nail)
slope25$nail <- as.character(slope25$nail)
rawdata25 <- list(LSAT_bio, FINAL_25_rugo, FINAL_Alain25, slope25)
rawdata25 %>% reduce(full_join, by='nail', copy = TRUE)
View(rawdata25)
print(rawdata25)
library(ggpubr)
# bring in biotic data:
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx") %>%
rename(nail = Plot) %>%
rename(turf_length = Turf Length (mm))
# bring in biotic data:
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx") %>%
rename(nail = Plot) %>%
rename(turf_length = 'Turf Length (mm)')
# bring in biotic data:
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx") %>%
rename(nail = Plot) %>%
rename(turf_length = c('Turf Length (mm)'))
ggplot(rawdata25, aes(avg_rugo25, 'Turf length (mm)'))+         # Modelling turf length (y) as function of
geom_point()+                                            # rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(Turf_length ~ avg_rugosity, data = Comparison_metrics_South_Canyon)
ggplot(rawdata25, aes(avg_rugo25, Turf length (mm))+         # Modelling turf length (y) as function of
ggplot(rawdata25, aes(x = avg_rugo25, y = Turf length (mm)))+         # Modelling turf length (y) as function of
ggplot(rawdata25, aes(x = avg_rugo25, y = 'Turf length (mm)'))+         # Modelling turf length (y) as function of
geom_point()+                                            # rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)
ggplot(rawdata25, aes(x = avg_rugo25, y = `Turf length (mm)`))+         # Modelling turf length (y) as function of
geom_point()+                                            # rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)
colnames(rawdata25)
# bring in biotic data:
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx") %>%
rename(nail = Plot) %>%
rename(turf_length = c('Turf Length (mm)'))
colnames(LSAT_bio)
colnames(FINAL_25_rugo)
colnames(FINAL_Alain25)
colnames(slope25)
combined_data <- bind_rows(rawdata25)
View(combined_data)
library(dplyr)
FINAL_25_rugo <- FINAL_25_rugo %>% filter(nail != 26)
# bring in slope data from GIS:
slope25 <- read_xlsx("avg_slope_25cm.xlsx")
slope50 <- read_xlsx("avg_slope_50cm.xlsx")
slope100 <- read_xlsx("avg_slope_100cm.xlsx")
View(slope25)
slope25 <- slope25 %>% filter(nail != 26)
# bring in slope data from GIS:
slope25 <- read_xlsx("avg_slope_25cm.xlsx")
slope50 <- read_xlsx("avg_slope_50cm.xlsx")
slope100 <- read_xlsx("avg_slope_100cm.xlsx")
FINAL_25_rugo <- FINAL_25_rugo %>% filter(nail != 26)
FINAL_50_rugo <- FINAL_50_rugo %>% filter(nail != 26)
FINAL_100_rugo <- FINAL_100_rugo %>% filter(nail != 26)
FINAL_Alain25 <- FINAL_Alain25 %>% filter(nail != 26)
FINAL_Alain50 <- FINAL_Alain50 %>% filter(nail != 26)
FINAL_Alain100 <- FINAL_Alain100 %>% filter(nail != 26)
slope25 <- slope25 %>% filter(nail != 26)
slope50 <- slope50 %>% filter(nail != 26)
slope100 <- slope100 %>% filter(nail != 26)
slope100 <- slope100 %>% filter(nail != 26)
View(slope100)
View(slope25)
View(slope50)
View(slope100)
slope100 <- read_xlsx("avg_slope_100cm.xlsx")
slope100 <- read_xlsx("avg_slope_100cm.xlsx")
View(slope100)
slope100 <- slope100 %>% filter(nail != 26)
View(slope100)
# bring in biotic data:
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx") %>%
rename(nail = Plot) %>%
rename(turf_length = c('Turf Length (mm)'))
# bring in slope data from GIS:
slope25 <- read_xlsx("avg_slope_25cm.xlsx")
# bring in biotic data:
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx") %>%
rename(nail = Plot) %>%
rename(turf_length = c('Turf Length (mm)'))
# and make sure the column type is the same before joining:
LSAT_bio$nail <- as.character(LSAT_bio$nail)
FINAL_25_rugo$nail <- as.character(FINAL_25_rugo$nail)
FINAL_Alain25$nail <- as.character(FINAL_Alain25$nail)
slope25$nail <- as.character(slope25$nail)
rawdata25 <- list(LSAT_bio, FINAL_25_rugo, FINAL_Alain25, slope25)
rawdata25 %>% reduce(full_join, by='nail', copy = TRUE)
View(rawdata25)
combined_data <- bind_rows(rawdata25)
View(combined_data)
rawdata25 %>% reduce(full_join, by='nail', copy = TRUE)
ggplot(rawdata25, aes(x = avg_rugo25, y = `Turf length (mm)`))+         # Modelling turf length (y) as function of
geom_point()+                                            # rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)
rawdata25 %>% reduce(full_join, by='nail', copy = TRUE)
View(rawdata25)
rawdata25_combined <- rawdata25 %>%
reduce(full_join, by = 'nail', copy = TRUE)
View(rawdata25_combined)
rawdata25 <- list(LSAT_bio, FINAL_25_rugo, FINAL_Alain25, slope25) %>%
reduce(full_join, by='nail', copy = TRUE)
slope25 <- slope25 %>% filter(nail != 26)
View(slope25)
rawdata25 <- list(LSAT_bio, FINAL_25_rugo, FINAL_Alain25, slope25) %>%
reduce(full_join, by='nail', copy = TRUE)
View(rawdata25)
ggplot(rawdata25, aes(x = avg_rugo25, y = `Turf length (mm)`))+         # Modelling turf length (y) as function of
geom_point()+                                            # rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(Turf_length ~ avg_rugosity, data = Comparison_metrics_South_Canyon)
summary(model)
# regular rugosity vs turf length
ggplot(rawdata25, aes(x = avg_rugo25, y = `Turf length (mm)`))+   # Modelling turf length (y) as function of rugosity (x)
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(`Turf length (mm)` ~ avg_rugosity, data = rawdata25)
model <- lm(`Turf length (mm)` ~ avg_rugo25, data = rawdata25)
summary(model)
# regular rugosity vs turf length
ggplot(rawdata25, aes(x = avg_rugo25, y = `Turf length (mm)`))+   # Modelling turf length (y) as function of rugosity (x)
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(`Turf length (mm)` ~ avg_rugo25, data = rawdata25)
summary(model)
# regular rugosity vs sediment depth
ggplot(rawdata25, aes(x = avg_rugo25,  y = `Sediment depth (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(`Sediment depth (mm)` ~ avg_rugo25, data = rawdata25)
summary(model)
# 0-1 rugosity vs tuf length
ggplot(rawdata25, aes(rugo25_A, y = `Turf length (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)
model <- lm(`Turf length (mm)` ~ rugo25_A, data = rawdata25)
summary(model)
# 0-1 rugosity vs turf length
ggplot(rawdata25, aes(rugo25_A, y = `Turf length (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity on 0-1 scale")
model <- lm(`Turf length (mm)` ~ rugo25_A, data = rawdata25)
summary(model)
# regular rugosity vs turf length
ggplot(rawdata25, aes(x = avg_rugo25, y = `Turf length (mm)`))+   # Modelling turf length (y) as function of rugosity (x)
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)
# regular rugosity vs turf length
ggplot(rawdata25, aes(x = avg_rugo25, y = `Turf length (mm)`))+   # Modelling turf length (y) as function of rugosity (x)
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity")
# regular rugosity vs sediment depth
ggplot(rawdata25, aes(x = avg_rugo25,  y = `Sediment depth (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity")
model <- lm(`Sediment depth (mm)` ~ avg_rugo25, data = rawdata25)
summary(model)
# 0-1 rugosity vs turf length
ggplot(rawdata25, aes(rugo25_A, y = `Turf length (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity on 0-1 scale")
model <- lm(`Turf length (mm)` ~ rugo25_A, data = rawdata25)
summary(model)
# 0-1 rugosity vs sediment depth
ggplot(rawdata25, aes(rugo25_A, y = `Sediment depth (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity on 0-1 scale")
model <- lm(`Sediment depth (mm)` ~ rugo25_A, data = rawdata25)
summary(model)
# slope vs turf length
ggplot(rawdata25, aes(MEAN, y = `Turf length (mm)`))+           # modelling turf length (y) as function
geom_point()+                                                                 # of slope
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Average Slope (degrees)")
model <- lm(`Turf length (mm)` ~ MEAN, data = rawdata25)
summary(model)
# slope vs sediment depth
ggplot(rawdata25, aes(MEAN, y = `Sediment depth (mm)`))+        # modelling sediment depth (y) as function
geom_point()+                                                                 # of slope (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Average Slope (degrees)")
model <- lm(`Sediment depth (mm)` ~ MEAN, data = rawdata25)
summary(model)
# and make sure the column type is the same before joining:
FINAL_50_rugo$nail <- as.character(FINAL_50_rugo$nail)
FINAL_Alain50$nail <- as.character(FINAL_Alain50$nail)
slope50$nail <- as.character(slope50$nail)
rawdata50 <- list(LSAT_bio, FINAL_50_rugo, FINAL_Alain50, slope50) %>%
reduce(full_join, by='nail', copy = TRUE)
View(rawdata50)
View(rawdata25)
# and make sure the column type is the same before joining:
FINAL_100_rugo$nail <- as.character(FINAL_100_rugo$nail)
FINAL_Alain100$nail <- as.character(FINAL_Alain100$nail)
slope100$nail <- as.character(slope100$nail)
# and make sure the column type is the same before joining:
FINAL_100_rugo$nail <- as.character(FINAL_100_rugo$nail)
FINAL_Alain100$nail <- as.character(FINAL_Alain100$nail)
slope100$nail <- as.character(slope100$nail)
rawdata100 <- list(LSAT_bio, FINAL_100_rugo, FINAL_Alain100, slope100) %>%
reduce(full_join, by='nail', copy = TRUE)
View(rawdata100)
# regular rugosity vs turf length
ggplot(rawdata50, aes(x = avg_rugo50, y = `Turf length (mm)`))+   # Modelling turf length (y) as function of rugosity (x)
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity")
model <- lm(`Turf length (mm)` ~ avg_rugo50, data = rawdata50)
summary(model)
# regular rugosity vs sediment depth
ggplot(rawdata50, aes(x = avg_rugo50,  y = `Sediment depth (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity")
model <- lm(`Sediment depth (mm)` ~ avg_rugo50, data = rawdata50)
summary(model)
# 0-1 rugosity vs turf length
ggplot(rawdata50, aes(rugo50_A, y = `Turf length (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity on 0-1 scale")
model <- lm(`Turf length (mm)` ~ rugo50_A, data = rawdata50)
summary(model)
# 0-1 rugosity vs sediment depth
ggplot(rawdata50, aes(rugo50_A, y = `Sediment depth (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity on 0-1 scale")
model <- lm(`Sediment depth (mm)` ~ rugo50_A, data = rawdata50)
summary(model)
# slope vs turf length
ggplot(rawdata50, aes(MEAN, y = `Turf length (mm)`))+           # modelling turf length (y) as function
geom_point()+                                                                 # of slope
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Average Slope (degrees)")
model <- lm(`Turf length (mm)` ~ MEAN, data = rawdata50)
summary(model)
# slope vs sediment depth
ggplot(rawdata50, aes(MEAN, y = `Sediment depth (mm)`))+        # modelling sediment depth (y) as function
geom_point()+                                                                 # of slope (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Average Slope (degrees)")
model <- lm(`Sediment depth (mm)` ~ MEAN, data = rawdata50)
summary(model)
# regular rugosity vs turf length
ggplot(rawdata100, aes(x = avg_rugo100, y = `Turf length (mm)`))+   # Modelling turf length (y) as function of rugosity (x)
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity")
model <- lm(`Turf length (mm)` ~ avg_rugo100, data = rawdata100)
summary(model)
# regular rugosity vs sediment depth
ggplot(rawdata100, aes(x = avg_rugo100,  y = `Sediment depth (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity")
model <- lm(`Sediment depth (mm)` ~ avg_rugo100, data = rawdata100)
summary(model)
# regular rugosity vs turf length
ggplot(rawdata100, aes(x = avg_rugo100, y = `Turf length (mm)`))+   # Modelling turf length (y) as function of rugosity (x)
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity")
model <- lm(`Turf length (mm)` ~ avg_rugo100, data = rawdata100)
summary(model)
# regular rugosity vs sediment depth
ggplot(rawdata100, aes(x = avg_rugo100,  y = `Sediment depth (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity")
model <- lm(`Sediment depth (mm)` ~ avg_rugo100, data = rawdata100)
summary(model)
# 0-1 rugosity vs turf length
ggplot(rawdata100, aes(rugo100_A, y = `Turf length (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity on 0-1 scale")
model <- lm(`Turf length (mm)` ~ rugo100_A, data = rawdata100)
summary(model)
# 0-1 rugosity vs sediment depth
ggplot(rawdata100, aes(rugo100_A, y = `Sediment depth (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity on 0-1 scale")
model <- lm(`Sediment depth (mm)` ~ rugo100_A, data = rawdata100)
summary(model)
# 0-1 rugosity vs turf length
ggplot(rawdata100, aes(rugo100_A, y = `Turf length (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity on 0-1 scale")
model <- lm(`Turf length (mm)` ~ rugo100_A, data = rawdata100)
summary(model)
# 0-1 rugosity vs sediment depth
ggplot(rawdata100, aes(rugo100_A, y = `Sediment depth (mm)`))+     # modelling sediment depth (y) as function
geom_point()+                                                                 # of rugosity (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Rugosity on 0-1 scale")
model <- lm(`Sediment depth (mm)` ~ rugo100_A, data = rawdata100)
summary(model)
# slope vs turf length
ggplot(rawdata100, aes(MEAN, y = `Turf length (mm)`))+           # modelling turf length (y) as function
geom_point()+                                                                 # of slope
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Average Slope (degrees)")
model <- lm(`Turf length (mm)` ~ MEAN, data = rawdata100)
summary(model)
# slope vs sediment depth
ggplot(rawdata100, aes(MEAN, y = `Sediment depth (mm)`))+        # modelling sediment depth (y) as function
geom_point()+                                                                 # of slope (x)
geom_smooth(method = "lm", formula = y ~ x)+
xlab("Average Slope (degrees)")
model <- lm(`Sediment depth (mm)` ~ MEAN, data = rawdata100)
summary(model)
tinytex::tlmgr_install("koma-script")
tinytex::reinstall_tinytex(repository = "illinois")
y
Y
tinytex::reinstall_tinytex(repository = "illinois")
tinytex::uninstall_tinytex()
tinytex::install_tinytex()
N
tinytex::install_tinytex()
tinytex::tinytex_root()
tinytex::tlmgr_install("koma-script")
tinytex::tlmgr_search("scrartcl")
