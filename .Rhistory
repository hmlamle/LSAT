rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo8 <- nail8 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
rugo9 <- nail9 %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space (Linear distance)
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
)%>%
ungroup() |>
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
all_nails <- list(nail1, nail2, nail3, nail4, nail5, nail6, nail7, nail8, nail9, nail10, nail11, nail12, nail13, nail14, nail15, nail16, nail17, nail18, nail19, nail20, nail21, nail22, nail23, nail24, nail25, nail26)
# Initialize an empty list to store the results
rugosity_list <- list()
# Loop through each nail dataset and apply the rugosity calculation
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(nails_list)) {
# Perform the calculations on each nail dataset
rugosity_list[[i]] <- nails_list[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
}
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(all_nails)) {
# Perform the calculations on each nail dataset
rugosity_list[[i]] <- all_nails[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
}
View(rugosity_list)
combined_rugosity <- bind_rows(rugosity_list, .id = "nail")
View(combined_rugosity)
View(rugosity_list)
# Initialize an empty list to store the results
Alain_rugosity <- list()
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(all_nails)) {
# Perform the calculations on each nail dataset
Alain_rugosity[[i]] <- all_nails[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
}
Alain_combined_rugosity <- bind_rows(rugosity_list, .id = "nail")
View(Alain_combined_rugosity)
Alain_combined_rugosity <- bind_rows(Alain_rugosity, .id = "nail")
Alain_combined_rugosity <- bind_rows(Alain_rugosity, .id = "nail")
system("git status")
# Define the number of files for each category
n_files <- 26
# Initialize empty lists to store the data
data_25cm <- list()
data_50cm <- list()
data_100cm <- list()
# Loop through the 25cm files and load them into the list
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 0331225/", "25cm_", i, ".csv")
data_25cm[[i]] <- read.csv(file_name)
}
test < read.csv("C:\Users\hanna\OneDrive - Florida International University\photogrammetry\LSAT data\10-20-2023\North Miami Beach\Viscore redo 031225\25cm_1.csv")
test < read.csv("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225")
test <- read.csv("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225")
test <- read.csv("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225")
test <- read.csv("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225")
test <- read.csv("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/25cm_1.csv")
View(test)
# Loop through the 25cm files and load them into the list
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 0331225/", "25cm_", i, ".csv")
data_25cm[[i]] <- read.csv(file_name)
}
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "25cm_", i, ".csv")
# Loop through the 25cm files and load them into the list
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "25cm_", i, ".csv")
data_25cm[[i]] <- read.csv(file_name)
}
View(data_25cm)
View(data_25cm)
# Loop through each data frame in the list and rename the columns
for (i in 1:n_files) {
colnames(data_25cm[[i]]) <- c("nail", "transect", "sample", "x", "y", "z")
}
View(data_25cm)
# Loop through each data frame in the list and rename the columns
for (i in 1:n_files) {
colnames(data_25cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# rename the columns
for (i in 1:n_files) {
colnames(data_25cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# 50cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "50cm_", i, ".csv")
data_50cm[[i]] <- read.csv(file_name)
}
View(data_50cm)
# rename the columns
for (i in 1:n_files) {
colnames(data_50cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# and last, 100cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "100cm_", i, ".csv")
data_50cm[[i]] <- read.csv(file_name)
}
# and last, 100cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "100cm-", i, ".csv")
data_50cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_100cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# and last, 100cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "100cm-", i, ".csv")
data_50cm[[i]] <- read.csv(file_name)
}
# and last, 100cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "100cm-", i, ".csv")
data_100cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_100cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# Define the number of files for each category
n_files <- 26
# Initialize empty lists to store the data
data_25cm <- list()
data_50cm <- list()
data_100cm <- list()
# 25cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "25cm_", i, ".csv")
data_25cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_25cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# 50cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "50cm_", i, ".csv")
data_50cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_50cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# and last, 100cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "100cm-", i, ".csv")
data_100cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_100cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# Initialize an empty list to store the results
rugo25 <- list()
# Initialize an empty list to store the results
rugo25 <- list()
rugo50 <- list()
rugo100 <- list()
# Initialize an empty list to store the results
rugosity_list <- list()
rugo25 <- list()
rugo50 <- list()
rugo100 <- list()
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_25cm)) {
# Perform the calculations on each nail dataset
rugo25[[i]] <- data_25cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
}
View(rugo25)
library(tidyverse)
# Define the number of files for each category
n_files <- 26
# Initialize empty lists to store the data
data_25cm <- list()
data_50cm <- list()
data_100cm <- list()
# 25cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "25cm_", i, ".csv")
data_25cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_25cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# 50cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "50cm_", i, ".csv")
data_50cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_50cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# and last, 100cm microquadrat:
for (i in 1:n_files) {
file_name <- paste0("C:/Users/hanna/OneDrive - Florida International University/photogrammetry/LSAT data/10-20-2023/North Miami Beach/Viscore redo 031225/", "100cm-", i, ".csv")
data_100cm[[i]] <- read.csv(file_name)
}
# rename the columns
for (i in 1:n_files) {
colnames(data_100cm[[i]]) <- c(paste0("nail", i), "transect", "sample", "x", "y", "z")
}
# Initialize an empty list to store the results
rugosity_list <- list()
rugo25 <- list()
rugo50 <- list()
rugo100 <- list()
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_25cm)) {
# Perform the calculations on each nail dataset
rugo25[[i]] <- data_25cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugosity = mean(rugosity),
rugosity_variance = var(rugosity),
avg_point_range = mean(point_range)
)
}
View(rugo25)
combined_rugosity <- bind_rows(rugo25, .id = "nail")
View(combined_rugosity)
rugo25 <- list()
rugo50 <- list()
rugo100 <- list()
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_25cm)) {
# Perform the calculations on each nail dataset
rugo25[[i]] <- data_25cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugo25 = mean(rugosity),
rugo25_variance = var(rugosity),
avg_point_range25 = mean(point_range)
)
}
combined_rugosity <- bind_rows(rugo25, .id = "nail")
View(combined_rugosity)
# Initialize an empty list to store the results
Alain_rugo25 <- list()
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_25cm)) {
# Perform the calculations on each nail dataset
Alain_rugo25[[i]] <- data_25cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
rugo25_A = mean(rugosity),
rugo25_var_A = var(rugosity),
avg_point_range_A25 = mean(point_range)
)
}
View(Alain_rugo25)
FINAL_25_rugo <- bind_rows(rugo25, .id = "nail")
FINAL_Alain25 <- bind_rows(Alain_rugosity, .id = "nail")
FINAL_Alain25 <- bind_rows(Alain_rugosity, .id = "nail")
FINAL_Alain25 <- bind_rows(Alain_rugo25, .id = "nail")
View(FINAL_Alain25)
# a For Loop to apply rugo calculation for each nail:
for (i in 1:length(data_50cm)) {
# Perform the calculations on each nail dataset
rugo50[[i]] <- data_50cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugo50 = mean(rugosity),
rugo50_variance = var(rugosity),
avg_point_range50 = mean(point_range)
)
}
FINAL_50_rugo <- bind_rows(rugo50, .id = "nail")
View(FINAL_50_rugo)
View(FINAL_25_rugo)
# a For Loop to apply rugo calculation for each nail:
for (i in 1:length(data_100cm)) {
# Perform the calculations on each nail dataset
rugo100[[i]] <- data_100cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (true_length / standard_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
avg_rugo100 = mean(rugosity),
rugo100_variance = var(rugosity),
avg_point_range100 = mean(point_range)
)
}
FINAL_100_rugo <- bind_rows(rugo100, .id = "nail")
View(FINAL_100_rugo)
# Initialize an empty list to store the results
Alain_rugo25 <- list()
Alain_rugo50 <- list()
Alain_rugo100 <- list()
# Initialize an empty list to store the results
Alain_rugo25 <- list()
Alain_rugo50 <- list()
Alain_rugo100 <- list()
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_25cm)) {
# Perform the calculations on each nail dataset
Alain_rugo25[[i]] <- data_25cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
rugo25_A = mean(rugosity),
rugo25_var_A = var(rugosity),
avg_point_range_A25 = mean(point_range)
)
}
FINAL_Alain25 <- bind_rows(Alain_rugo25, .id = "nail")
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_50cm)) {
# Perform the calculations on each nail dataset
Alain_rugo50[[i]] <- data_50cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
rugo50_A = mean(rugosity),
rugo50_var_A = var(rugosity),
avg_point_range_A50 = mean(point_range)
)
}
FINAL_Alain50 <- bind_rows(Alain_rugo50, .id = "nail")
# Loop through each nail dataset and apply the rugosity calculation
for (i in 1:length(data_100cm)) {
# Perform the calculations on each nail dataset
Alain_rugo100[[i]] <- data_100cm[[i]] %>%
filter(z != 0) %>%
group_by(transect) %>%
summarize(
standard_length = sum(sqrt(diff(x)^2 + diff(y)^2)),  # Euclidean distance in 2D space
true_length = sum(sqrt(diff(x)^2 + diff(y)^2 + diff(z)^2)),  # 3D distance
rugosity = (standard_length / true_length),
point_range = max(z) - min(z)  # Range between lowest and highest point
) %>%
ungroup() %>%
summarize(
rugo100_A = mean(rugosity),
rugo100_var_A = var(rugosity),
avg_point_range_A100 = mean(point_range)
)
}
FINAL_Alain100 <- bind_rows(Alain_rugo100, .id = "nail")
library(tidyverse)
library(ggplot2)
library(readxl)
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx")
View(LSAT_bio)
View(Alain_rugo25)
print(alain_rugo25[1])
print(alain_rugo25[1])
write.csv(FINAL_25_rugo, file="25_rugo")
write.csv(FINAL_25_rugo, file="25_rugo.csv")
write.csv(FINAL_50_rugo, file="50_rugo.csv")
write.csv(FINAL_100_rugo, file="100_rugo.csv")
write.csv(FINAL_Alain25, file="25_rugo_Alain.csv")
write.csv(FINAL_Alain50, file="50_rugo_Alain.csv")
write.csv(FINAL_Alain100, file="100_rugo_Alain.csv")
View(FINAL_25_rugo)
View(FINAL_Alain25)
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx")
rename(LSAT_bio, Plot = nail)
rename(LSAT_bio, nail = Plot)
rugo25
slope25 <- read_xlsx("avg_slope_25cm.xlsx")
View(slope25)
rawdata25 <- list(LSAT_bio, rugo25, Alain_rugo25, slope25)
rawdata25 %>% reduce(full_join, by='nail')
rawdata25 %>% reduce(full_join, by='nail', copy = TRUE)
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx")
rename(LSAT_bio, nail = Plot)
View(LSAT_bio)
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx")
setwd("C:/Users/hanna/OneDrive - Florida International University/R/LSAT rugosity")
LSAT_bio <- read_xlsx("South Canyon Fall LSAT Data.xlsx")
